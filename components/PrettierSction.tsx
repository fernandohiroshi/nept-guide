import React from 'react'

import Code from './Code'

const PrettierSection = () => {
  return (
    <div className="flex flex-col gap-4">
      <h2 className="my-8 text-2xl">• Configuring Prettier Files</h2>
      <p>
        Create the file: <b>.prettierrc.json</b>
      </p>
      <p>
        This file defines Prettier&apos;s settings to ensure that code is formatted consistently. See the content and a
        detailed description:
      </p>
      <Code>
        {`{
  "semi": false,
  "singleQuote": true,
  "trailingComma": "all",
  "printWidth": 120,
  "tabWidth": 2,
  "plugins": ["prettier-plugin-tailwindcss"],
  "tailwindFunctions": ["clsx", "cn", "twMerge"]
}`}
      </Code>
      <p>
        <b>semi:</b> Defines whether Prettier should add a semicolon at the end of each line. The value <b>false</b>{' '}
        indicates that no semicolon should be added.
      </p>
      <p>
        <b>singleQuote:</b> Defines whether Prettier should use single quotes instead of double quotes for strings. The
        value <b>true</b> indicates that single quotes should be used.
      </p>
      <p>
        <b>trailingComma:</b> Defines how trailing commas should be used. The value <b>all</b> indicates that trailing
        commas should be added wherever possible, including objects, arrays, etc.
      </p>
      <p>
        <b>printWidth:</b> Defines the maximum width of each line of code before it is wrapped. The value <b>120</b>{' '}
        indicates that the line should be a maximum of 120 characters.
      </p>
      <p>
        <b>tabWidth:</b> Defines the number of spaces used for indentation. The value <b>2</b> indicates that each level
        of indentation should have 2 spaces.
      </p>
      <p>
        <b>plugins:</b> Specifies additional plugins for Prettier. Here, <b>prettier-plugin-tailwindcss</b> is used to
        automatically sort Tailwind CSS classes.
      </p>
      <p>
        <b>tailwindFunctions:</b> Lists functions that Prettier should recognize for specific Tailwind class formatting.
        Includes <b>clsx</b>, <b>cn</b>, and <b>twMerge</b>.
      </p>

      <h2 className="my-8 text-2xl">• .prettierignore</h2>
      <p>
        The .prettierignore file is used to specify files and directories that should be ignored by Prettier when
        formatting code. See the content and a detailed description:
      </p>
      <Code>
        {`.next
next-env.d.ts
node_modules
public
yarn.lock
package-lock.json`}
      </Code>
      <p>
        <b>.next:</b> Ignores the .next directory, which is automatically created by Next.js during the build process
        and contains build files.
      </p>
      <p>
        <b>next-env.d.ts:</b> Ignores the next-env.d.ts file, which is a type definition file generated by Next.js.
      </p>
      <p>
        <b>node_modules:</b> Ignores the node_modules directory, which contains all project dependencies. Formatting it
        is unnecessary and can cause issues.
      </p>
      <p>
        <b>public:</b> Ignores the public directory, which usually contains static assets like images, fonts, etc.
      </p>
      <p>
        <b>yarn.lock:</b> Ignores the yarn.lock file, which is generated by the Yarn package manager and contains the
        exact dependency tree.
      </p>
      <p>
        <b>package-lock.json:</b> Ignores the package-lock.json file, which is generated by npm (another package
        manager) and also contains the exact dependency tree.
      </p>
    </div>
  )
}

export default PrettierSection
